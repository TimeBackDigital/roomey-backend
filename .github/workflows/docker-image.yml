name: Docker Build & PR to Main

on:
  push:
    branches: ["staging"] # build only when staging is updated

concurrency:
  group: docker-build-staging
  cancel-in-progress: true

permissions:
  contents: write # needed to create PR
  pull-requests: write

jobs:
  build-and-open-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: false

      - name: Open PR to main
        if: ${{ success() && github.ref_name == 'staging' }}
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const head = 'staging';
            const base = 'main';

            const { data: prs } = await github.rest.pulls.list({
              owner, repo, state: 'open', base
            });
            const existing = prs.find(pr => pr.head && pr.head.ref === head);
            if (existing) {
              core.info(`PR already exists: #${existing.number} (${existing.html_url})`);
              return;
            }

            const title = `Merge ${head} into ${base}`;
            const body = [
              'This PR was opened automatically after a successful Docker build.',
              '',
              '- Build: âœ…',
              '- Source: `staging`',
              '- Target: `main`'
            ].join('\n');

            const { data: pr } = await github.rest.pulls.create({
              owner, repo, title, head, base, body, maintainer_can_modify: true
            });
            core.info(`Created PR #${pr.number}: ${pr.html_url}`);
