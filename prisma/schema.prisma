// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
  output = "../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "stripe_schema", "auth_schema"]
}

model User_table {
  user_id                String               @id  @map("id")
  user_name              String               @map("name")
  user_email             String               @map("email")
  user_email_verified    Boolean              @map("emailVerified")
  user_image             String?              @map("image")
  user_created_at        DateTime             @map("createdAt") @default(now()) @db.Timestamptz(3)
  user_updated_at        DateTime             @map("updatedAt") @db.Timestamptz(3)

  // prefixed custom fields (mapped to existing DB columns)
  user_role              String?              @map("role")
  user_banned            Boolean?             @map("banned")
  user_ban_reason        String?              @map("banReason")
  user_ban_expires       DateTime?            @map("banExpires") @db.Timestamptz(3)
  user_stripe_customer_id String?             @map("stripeCustomerId")

  user_account_tables    User_account_table[]

  @@unique([user_email])
  @@map("user_table")
  @@schema("auth_schema")
}

model User_account_table {
  user_account_id                           String     @id @map("id")
  user_account_account_id                   String     @map("accountId")
  user_account_provider_id                  String     @map("providerId")
  user_account_user_id                      String     @map("userId")
  user_table                                User_table @relation(fields: [user_account_user_id], references: [user_id], onDelete: Cascade)

  user_account_access_token                 String?    @map("accessToken")
  user_account_refresh_token                String?    @map("refreshToken")
  user_account_id_token                     String?    @map("idToken")
  user_account_access_token_expires_at      DateTime?  @map("accessTokenExpiresAt") @db.Timestamptz(3)
  user_account_refresh_token_expires_at     DateTime?  @map("refreshTokenExpiresAt") @db.Timestamptz(3)
  user_account_scope                        String?    @map("scope")
  user_account_password                     String?    @map("password")
  user_account_created_at                   DateTime   @map("createdAt") @default(now()) @db.Timestamptz(3)
  user_account_updated_at                   DateTime   @map("updatedAt") @db.Timestamptz(3)

  @@map("user_account_table")
  @@schema("auth_schema")
}

model Verification_table {
  verification_id          String    @id           @map("id")
  verification_identifier  String    @map("identifier")
  verification_value       String    @map("value")
  verification_expires_at  DateTime  @map("expiresAt") @db.Timestamptz(3)
  verification_created_at  DateTime? @map("createdAt") @default(now()) @db.Timestamptz(3)
  verification_updated_at  DateTime? @map("updatedAt") @db.Timestamptz(3)

  @@map("verification_table")
  @@schema("auth_schema")
}

model subscriotion_table {
  subscription_id                   String    @id        @map("id")
  subscription_plan                 String    @map("plan")
  subscription_reference_id         String    @map("referenceId")
  subscription_stripe_customer_id   String?   @map("stripeCustomerId")
  subscription_stripe_subscription_id String? @map("stripeSubscriptionId")
  subscription_status               String?   @map("status")
  subscription_period_start         DateTime? @map("periodStart") @default(now()) @db.Timestamptz(3)
  subscription_period_end           DateTime? @map("periodEnd") @db.Timestamptz(3)
  subscription_cancel_at_period_end Boolean?  @map("cancelAtPeriodEnd")
  subscription_seats                Int?      @map("seats")

  @@map("subscription")
  @@schema("auth_schema")
}

model plan_table {
  plan_id          String    @id        @map("id")
  plan_name        String    @map("name")
  plan_price_id    String?   @map("priceId")
  plan_created_at  DateTime  @map("createdAt") @default(now()) @db.Timestamptz(3)
  plan_updated_at  DateTime? @map("updatedAt") @db.Timestamptz(3)
  plan_photo       String?   @map("photo")
  plan_description String?   @map("description")
  plan_is_active   Boolean   @map("isActive")

  @@map("plan_table")
  @@schema("stripe_schema")
}